# 全局配置
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Events 配置
events {
    worker_connections 1024;
    multi_accept on;
    use epoll;
}

# HTTP 配置
http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;

    # 虚拟主机配置 - 静态资源服务
    server {
        listen       80;
        listen  [::]:80;
        server_name  localhost;
        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;

            # 新增下面这句，其他是默认nginx配置
            # 解决部分前端框架的路由问题，在浏览器刷新报错404
            try_files $uri $uri/ /index.html;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }

    # 反向代理配置
    # server {
    #     listen 80;
    #     server_name app.example.com;
    #     location / {
    #         proxy_pass http://backend;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #     }
    # }

    # # 负载均衡配置
    # upstream backend {
    #     server backend1.example.com;
    #     server backend2.example.com;
    #     server backend3.example.com backup; # 备份节点
    # }

    # # SSL/TLS 加密配置
    # server {
    #     listen 443 ssl;
    #     server_name secure.example.com;
    #     ssl_certificate /etc/nginx/ssl/secure.example.com.crt;
    #     ssl_certificate_key /etc/nginx/ssl/secure.example.com.key;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_prefer_server_ciphers on;
    #     ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";

    #     location / {
    #         # 此处根据需求添加静态服务、反向代理或其他配置
    #     }
    # }

    # # 缓存设置
    # server {
    #     location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
    #         expires 7d;
    #         add_header Cache-Control public;
    #     }
    # }

    # # URL 重写与重定向
    # server {
    #     listen 80;
    #     server_name oldsite.com;
    #     return 301 https://newsite.com$request_uri;
    # }
}
